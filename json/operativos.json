{
	"questions": [
	{"id": 1,
	"fecha": "25 feb 2014",
	"pregunta": "En paginación con memoria virtual, la lectura de una variable podría implicar tres accesos a disco.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Esto sucede en los casos de paginación jerárquica de varios niveles. En este caso se tiene un acceso a la página, uno a la tabla de páginas externas y luego a la tabla de páginas internas (y a las sucesivas tablas si es que hay más niveles)."
	},
	{"id": 2,
	"fecha": "25 feb 2014",
	"pregunta": "En la mayoría de los filesystems, un directorio o carpeta es un archivo cuyo contenido está formado por el contenido de los archivos que el directorio contiene.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Un directorio o carpeta está formado por referencias a otros archivos y/o directorios."
	},
	{"id": 3,
	"fecha": "25 feb 2014",
	"pregunta": "La imagen de un proceso está formada por los datos (estáticos y dinámicos), el código, la pila y el PCB. Ante la suspensión del mismo, todos estos elementos son llevados a disco para liberar espacio memoria física, y así poder ingresar un nuevo proceso.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "El PCB siempre debe permanecer en memoria."
	},
	{"id": 4,
	"fecha": "25 feb 2014",
	"pregunta": "Si los procesos no proveen información sobre las duraciones de sus ráfagas, entonces no se pueden aplicar algoritmos de planificación como el SJF.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Partiendo de un valor inicial estimado default para todos los procesos (o hilos) es posible utilizar este algoritmo. Con las sucesivas ráfagas y estimaciones ese valor estimado se irá corrigiendo para cada proceso."
	},
	{"id": 5,
	"fecha": "25 feb 2014",
	"pregunta": "Es posible que una entrada-salida realizada desde un ULT no bloquee al resto de los ULTs del mismo padre.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Una forma de lograrlo es a través de jacketing. De esta forma, los ULTs llamarían a funciones de la biblioteca en vez de directamente al SO, y la misma se encargaría de convertir dichas llamadas al sistema bloqueantes en otras no bloqueantes, de forma que se puedan ejecutar el resto de los ULTs."
	},
	{"id": 6,
	"fecha": "3 mar 2015",
	"pregunta": "Se detecta que el planificador de largo plazo está ejecutándose con mayor frecuencia que el de mediano plazo. Si el grado de multiprogramación se mantuvo, esto podría significar que está ocurriendo thrashing.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Si el de mediano plazo ejecuta relativamente poco es porque hay poco swapping. Entonces, no debería haber thrashing, sino procesos que empiezan y terminan sin problemas."
	},
	{"id": 7,
	"fecha": "3 mar 2015",
	"pregunta": "No hay forma de que dos procesos sincronizados, que ejecutan en diferentes computadoras, queden en deadlock entre sí.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Si se los comunica usando paso de mensajes, ambos envían un mensaje y ambos quedan bloqueados esperando otro mensaje (por ej un OK del otro), es posible que queden en deadlock (de hecho es un error de algunos tps, cuando recién arrancan). También se da mucho en DBs distribuidas, aunque excede los ejemplos que vemos habitualmente."
	},
	{"id": 8,
	"fecha": "3 mar 2015",
	"pregunta": "Cuantos más niveles hay en un esquema de paginación multinivel, más importante es el uso de una TLB.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Cuando los niveles se incrementan, también lo hacen los accesos a tablas de páginas. Por ende, tener una TLB con un buen “hit ratio” evita cada vez más accesos."
	},
	{"id": 9,
	"fecha": "3 mar 2015",
	"pregunta": "Implementar la estrategia de “Evasión” implica sólo verificar que el Sistema esté en Estado Seguro cuando se pide un recurso.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Implica chequear que haya instancias de ese recurso, que no se pase del máximo que puede pedir ese proceso, luego simular otorgarle el recurso y chequear estado seguro y recién ahí otorgarlo."
	},
	{"id": 10,
	"fecha": "3 mar 2015",
	"pregunta": "En FAT, la lectura de un bloque de datos podría requerir menos accesos a disco que con EXT (con un igual tamaño de bloque). A su vez, FAT permite el acceso directo gracias a su asignación de bloques indexada.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "La primera afirmación es correcta ya que teniendo la FAT en RAM, sólo se acceden a bloques de datos, mientras que en EXT se podría requerir acceder a algún bloque de PTR. Sin embargo, la segunda afirmación es incorrecta ya que FAT utiliza una asignación de bloques encadenada/enlazada (no hay un índice por cada archivo)"
	},
	{"id": 11,
	"fecha": "28 jul 2015",
	"pregunta": "Una partición de swapp no necesita mecanismos que garanticen la integridad de los datos.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "No necesita integridad porque la información volcada sólo se utiliza sólo cuando el SO está activo."
	},
	{"id": 12,
	"fecha": "28 jul 2015",
	"pregunta": "Cuando la cantidad de procesos en ejecución es alta, la cantidad de memoria disponible puede afectar el rendimiento del Sistema Operativo.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Se puede caer en thrashing, y esto se soluciona con más memoria."
	},
	{"id": 13,
	"fecha": "15 feb 2016",
	"pregunta": "En un sistema que utiliza un planificador de corto plazo sin desalojo, los únicos cambios de contexto que ocurren son los generados por el abandono voluntario de la cpu por parte del proceso en ejecución, ya sea por finalización o llamada a syscall.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Pueden ocurrir interrupciones asícronas, como el fin de una IO, que por más que el planificador no tenga en cuenta para replanificar, deberá ser atendida, generando cambios de contexto."
	},
	{"id": 14,
	"fecha": "15 feb 2016",
	"pregunta": "Los ULTs que son creados por una biblioteca que implementa las entradas salidas mediante la técnica de jacketing se comportan igual que los KLTs.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Los KLTs pueden ejecutar en paralelo en distintos procesadores y los ULTs no."
	},
	{"id": 15,
	"fecha": "15 feb 2016",
	"pregunta": "Es posible realizar symbolic links sobre archivos de otros file systems, aún si los mismos no son mantenidos. Sin embargo, no se puede hacer lo mismo con los hardlinks, al menos que ambos file systems sean de tipo UFS (Unix FS).",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "En ninguna forma se pueden realzar hardlinks, el número de inodo de la entrada de directorio apuntaría a un archivo del mismo volumen (partición formateada)."
	},
	{"id": 16,
	"fecha": "15 feb 2016",
	"pregunta": "Si bien la técnica de Buddy System permite particionar la memoria en huecos muy pequeños, puede dejar huecos imposibles de asignar.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Siempre pueden quedar huecos imposibles de asignar si se produce fragmentación externa."
	},
	{"id": 17,
	"fecha": "15 feb 2016",
	"pregunta": "Si en un sistema no se utiliza ninguna técnica de detección/evasión/prevención de deadlocks, si ocurre un deadlock, no se podrá realizar ningún trabajo útil.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Los procesos en estado de deadlock no podrán avanzar con sus tareas. Sin embargo, otros procesos que no requieran instancias retenidas por los procesos involucrados podrán progresar correctamente."
	},
	{"id": 18,
	"fecha": "15 feb 2016",
	"pregunta": "Se tiene un sistema de paginación por demanda, con páginas de 8 KiB que trabaja con dos discos rígidos. Uno para Swap y el otro con un File System tipo Unix. El FS Unix posee bloques de 1 KiB y punteros de 32 bits, donde cada INodo posee diez punteros directos, dos indirectos simples, uno doble y uno triple.<br> Se quiere saber cuántas operaciones sobre bloques se requieren para crear el proceso que se va a ejecutar, si se sabe que el ejecutable ocupa 300MiB y el proceso tendrá un tamaño de 350MiB.<br><i class='nota'>*Recuerde que para el disco de SWAP se requiere que el proceso pueda ser accedido tanto para lectura como para escritura en el modo más rápido posible.</i>",
	"tipo": "numericinput",
	"respuesta": {"value": 44800, "precision": 0}
	},
	{"id": 19,
	"fecha": "23 feb 2016",
	"pregunta": "El mapeo de archivos a memoria permite a los procesos manejar archivos muy grandes de manera eficiente y sencilla.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "Se debe a que esta funcionalidad expone a los procesos el sistema de memoria virtual del sistema operativo, aplicado a archivos comunes, el cual se encuentra altamente probado para ser muy eficiente. Es sencillo porque permite manejar el archivo como si fuera un conjunto de bytes en memoria, que se cargan y se persisten en el disco por sí solos."
	},
	{"id": 20,
	"fecha": "23 feb 2016",
	"pregunta": "Usando semáforos implementados con espera activa no hay posibilidad de deadlocks, ya que los procesos no se bloquean esperando para ingresar a una región crítica.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Los procesos pueden bloquearse esperando otros recursos y cumplir las 4 condiciones."
	},
	{"id": 21,
	"fecha": "23 feb 2016",
	"pregunta": "Si una system call se ejecuta de forma no bloqueante, igualmente realizará al menos un cambio de modo.",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "El cambio de modo se realiza para que el SO atienda la syscall."
	},
	{"id": 22,
	"fecha": "23 feb 2016",
	"pregunta": "Lecturas secuenciales de archivos muy grandes requieren mayor cantidad de accesos a bloques en EXT que en FAT (asumiendo archivos y bloques de igual tamaño).",
	"tipo": "vof",
	"respuesta": "Verdadero",
	"justifica": "En archivos grandes es necesario leer los bloques de punteros, aunque la diferencia de lecturas es baja en proporción."
	},
	{"id": 23,
	"fecha": "23 feb 2016",
	"pregunta": "El algoritmo SJF con estimadores no puede aplicarse si el comportamiento de los procesos es muy errático.",
	"tipo": "vof",
	"respuesta": "Falso",
	"justifica": "Si son muy erráticos (varían su comportamiento entre i/o bound y cpu bound), es útil que poner un valor de alpha tal que privilegie la historia reciente de los procesos por sobre la media de toda la historia."
	}
	]
}